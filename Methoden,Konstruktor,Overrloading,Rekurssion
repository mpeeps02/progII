METHODEN IN JAVA
myMethod() in main://myMethod is used to print the action
public class Main {
  static void myMethod() {
    System.out.println("I just got executed!");
  }

  public static void main(String[] args) {
    myMethod();
  }
}//Output "I just got executed!"
===============================================================
METHOD: PARAMETERS AND ARGUMENTS

MULTIPLE PARAMETERS
public class Main {
  static void myMethod(String fname, int age) {
    System.out.println(fname + " is " + age);
  }

  public static void main(String[] args) {
    myMethod("Liam", 5);
    myMethod("Jenny", 8);
    myMethod("Anja", 31);
  }
}
==============================================================
RETURN VALUES
public class Main {
  static int myMethod(int x) {
    return 5 + x;
  }

  public static void main(String[] args) {
    System.out.println(myMethod(3));
  }
}
===============================================================
METHOD WITH IF..ELSE
public class Main {

  // Create a checkAge() method with an integer variable called age
  static void checkAge(int age) {

    // If age is less than 18, print "access denied"
    if (age < 18) {
      System.out.println("Access denied - You are not old enough!");

    // If age is greater than, or equal to, 18, print "access granted"
    } else {
      System.out.println("Access granted - You are old enough!");
    }

  }

  public static void main(String[] args) {
    checkAge(20); // Call the checkAge method and pass along an age of 20
  }
}

// Outputs "Access granted - You are old enough!"
==================================================================
METHOD OVERLOADING
-multiple methods with identical name but different parameters

int myMethod(int x)
float myMethod(float x)
double myMethod(double x, double y)

static int plusMethodInt(int x, int y) {
  return x + y;
}

static double plusMethodDouble(double x, double y) {
  return x + y;
}

public static void main(String[] args) {
  int myNum1 = plusMethodInt(8, 5);
  double myNum2 = plusMethodDouble(4.3, 6.26);
  System.out.println("int: " + myNum1);
  System.out.println("double: " + myNum2);
}
==========================================================================
RECURSION
-Use recursion to add all of the numbers up to 10.

public class Main {
  public static void main(String[] args) {
    int result = sum(10);
    System.out.println(result);
  }
  public static int sum(int k) {
    if (k > 0) {
      return k + sum(k - 1);
    } else {
      return 0;
    }
  }
}
==========================================================

//method overriding = declaring a method in sub class
		//which is already present in parent class 
			//done so that a child class can give its own implementation
			//each class uses the method that is more close

//own implementation of speak method
	//method is considered the overriding method
	//override erm√∂glicht dog class ihre methode zu nutzen

//passing a string variable
	/*String name = "peeps";
	
	hello(name); //referenz 
}
static void hello(String name) { //nur void: ohne return 
System.out.println("Hello");*/
	
	/*int x=3;
	int y=4;
	int z=add(x,y);
	System.out.println(z);
}
static int add(int x, int y) { //return type angeben
	int z=x+y;
	return z;
	*/
	
//overloaded methods
/*	int x =add(1,2,3);
	System.out.println(x);
}
static int add(int a, int b) {
	System.out.println("#1");
	return a+b;
}
static int add(int a, int b,int c) {
	System.out.println("#2");
	return a+b+c;
}
*/
}}

